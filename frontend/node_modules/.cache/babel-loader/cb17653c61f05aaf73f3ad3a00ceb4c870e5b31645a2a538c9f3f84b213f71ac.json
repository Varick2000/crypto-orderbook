{"ast":null,"code":"/**\n * Сервіс для роботи з WebSocket-підключенням до бекенду\n */class WebSocketService{constructor(url){this.url=url;this.socket=null;this.isConnected=false;this.reconnectTimeout=null;this.reconnectAttempts=0;this.maxReconnectAttempts=10;this.reconnectDelay=2000;// 2 секунди\n// Колбеки для різних подій\nthis.callbacks={onOpen:[],onClose:[],onError:[],onOrderbookUpdate:[],onTokenAdded:[],onTokenRemoved:[],onExchangeAdded:[],onExchangeRemoved:[],onOrderbooksCleared:[],onFullTableUpdate:[],onInitialData:[],onError:[]};}/**\n     * Підключення до WebSocket\n     */connect(){if(this.socket&&(this.socket.readyState===WebSocket.OPEN||this.socket.readyState===WebSocket.CONNECTING)){console.log('WebSocket already connected or connecting');return;}this.socket=new WebSocket(this.url);this.socket.onopen=()=>{console.log('WebSocket connected');this.isConnected=true;this.reconnectAttempts=0;this.triggerCallbacks('onOpen');};this.socket.onclose=event=>{console.log(`WebSocket closed: ${event.code} - ${event.reason}`);this.isConnected=false;this.triggerCallbacks('onClose',event);// Спроба переконектитись\nthis.scheduleReconnect();};this.socket.onerror=error=>{console.error('WebSocket error:',error);this.triggerCallbacks('onError',error);};this.socket.onmessage=event=>{try{const message=JSON.parse(event.data);this.handleMessage(message);}catch(error){console.error('Error parsing WebSocket message:',error);}};}/**\n     * Планування спроби переконектитись\n     */scheduleReconnect(){if(this.reconnectTimeout){clearTimeout(this.reconnectTimeout);}if(this.reconnectAttempts<this.maxReconnectAttempts){this.reconnectAttempts++;const delay=this.reconnectDelay*Math.pow(1.5,this.reconnectAttempts-1);console.log(`Reconnecting in ${delay/1000} seconds (attempt ${this.reconnectAttempts}/${this.maxReconnectAttempts})`);this.reconnectTimeout=setTimeout(()=>{this.connect();},delay);}else{console.error('Max reconnect attempts reached, giving up');}}/**\n     * Відключення від WebSocket\n     */disconnect(){if(this.socket){this.socket.close();this.socket=null;this.isConnected=false;if(this.reconnectTimeout){clearTimeout(this.reconnectTimeout);this.reconnectTimeout=null;}}}/**\n     * Відправка повідомлення на сервер\n     */send(message){if(!this.isConnected){console.warn('Cannot send message, WebSocket not connected');return false;}try{this.socket.send(JSON.stringify(message));return true;}catch(error){console.error('Error sending WebSocket message:',error);return false;}}/**\n     * Обробка вхідних повідомлень\n     */handleMessage(message){const type=message.type;switch(type){case'orderbook_update':this.triggerCallbacks('onOrderbookUpdate',{exchange:message.exchange,token:message.token,sell:message.sell,buy:message.buy,best_sell:message.best_sell,best_buy:message.best_buy});break;case'token_added':this.triggerCallbacks('onTokenAdded',message.token);break;case'token_removed':this.triggerCallbacks('onTokenRemoved',message.token);break;case'exchange_added':this.triggerCallbacks('onExchangeAdded',message.exchange);break;case'exchange_removed':this.triggerCallbacks('onExchangeRemoved',message.exchange);break;case'orderbooks_cleared':this.triggerCallbacks('onOrderbooksCleared');break;case'full_table_update':this.triggerCallbacks('onFullTableUpdate',message.data);break;case'initial_data':this.triggerCallbacks('onInitialData',{tokens:message.tokens,exchanges:message.exchanges,orderbooks:message.orderbooks});break;case'error':console.error('Server error:',message.message);this.triggerCallbacks('onError',message.message);break;default:console.warn('Unknown message type:',type);break;}}/**\n     * Виклик зареєстрованих колбеків\n     */triggerCallbacks(event,data){if(this.callbacks[event]){this.callbacks[event].forEach(callback=>{try{callback(data);}catch(error){console.error(`Error in ${event} callback:`,error);}});}}/**\n     * Реєстрація колбеку\n     */on(event,callback){if(this.callbacks[event]){this.callbacks[event].push(callback);}else{console.warn(`Unknown event: ${event}`);}return this;// Для ланцюгового виклику\n}/**\n     * Видалення колбеку\n     */off(event,callback){if(this.callbacks[event]){this.callbacks[event]=this.callbacks[event].filter(cb=>cb!==callback);}return this;}/**\n     * Підписка на оновлення ордербуків\n     */subscribe(){let tokens=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];let exchanges=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];return this.send({action:'subscribe',tokens,exchanges});}/**\n     * Додавання нового токену\n     */addToken(token){return this.send({action:'add_token',token});}/**\n     * Видалення токену\n     */removeToken(token){return this.send({action:'remove_token',token});}/**\n     * Додавання нової біржі\n     */addExchange(exchange,url){let type=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'websocket';return this.send({action:'add_exchange',exchange,url,type});}/**\n     * Видалення біржі\n     */removeExchange(exchange){return this.send({action:'remove_exchange',exchange});}/**\n     * Оновлення цін\n     */updatePrices(){let exchange=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;return this.send({action:'update_prices',exchange});}/**\n     * Очищення всіх ордербуків\n     */clear(){return this.send({action:'clear'});}}export default WebSocketService;","map":{"version":3,"names":["WebSocketService","constructor","url","socket","isConnected","reconnectTimeout","reconnectAttempts","maxReconnectAttempts","reconnectDelay","callbacks","onOpen","onClose","onError","onOrderbookUpdate","onTokenAdded","onTokenRemoved","onExchangeAdded","onExchangeRemoved","onOrderbooksCleared","onFullTableUpdate","onInitialData","connect","readyState","WebSocket","OPEN","CONNECTING","console","log","onopen","triggerCallbacks","onclose","event","code","reason","scheduleReconnect","onerror","error","onmessage","message","JSON","parse","data","handleMessage","clearTimeout","delay","Math","pow","setTimeout","disconnect","close","send","warn","stringify","type","exchange","token","sell","buy","best_sell","best_buy","tokens","exchanges","orderbooks","forEach","callback","on","push","off","filter","cb","subscribe","arguments","length","undefined","action","addToken","removeToken","addExchange","removeExchange","updatePrices","clear"],"sources":["D:/100/crypto-orderbook/frontend/src/services/websocket.js"],"sourcesContent":["/**\n * Сервіс для роботи з WebSocket-підключенням до бекенду\n */\nclass WebSocketService {\n    constructor(url) {\n      this.url = url;\n      this.socket = null;\n      this.isConnected = false;\n      this.reconnectTimeout = null;\n      this.reconnectAttempts = 0;\n      this.maxReconnectAttempts = 10;\n      this.reconnectDelay = 2000; // 2 секунди\n      \n      // Колбеки для різних подій\n      this.callbacks = {\n        onOpen: [],\n        onClose: [],\n        onError: [],\n        onOrderbookUpdate: [],\n        onTokenAdded: [],\n        onTokenRemoved: [],\n        onExchangeAdded: [],\n        onExchangeRemoved: [],\n        onOrderbooksCleared: [],\n        onFullTableUpdate: [],\n        onInitialData: [],\n        onError: []\n      };\n    }\n  \n    /**\n     * Підключення до WebSocket\n     */\n    connect() {\n      if (this.socket && (this.socket.readyState === WebSocket.OPEN || this.socket.readyState === WebSocket.CONNECTING)) {\n        console.log('WebSocket already connected or connecting');\n        return;\n      }\n      \n      this.socket = new WebSocket(this.url);\n      \n      this.socket.onopen = () => {\n        console.log('WebSocket connected');\n        this.isConnected = true;\n        this.reconnectAttempts = 0;\n        this.triggerCallbacks('onOpen');\n      };\n      \n      this.socket.onclose = (event) => {\n        console.log(`WebSocket closed: ${event.code} - ${event.reason}`);\n        this.isConnected = false;\n        this.triggerCallbacks('onClose', event);\n        \n        // Спроба переконектитись\n        this.scheduleReconnect();\n      };\n      \n      this.socket.onerror = (error) => {\n        console.error('WebSocket error:', error);\n        this.triggerCallbacks('onError', error);\n      };\n      \n      this.socket.onmessage = (event) => {\n        try {\n          const message = JSON.parse(event.data);\n          this.handleMessage(message);\n        } catch (error) {\n          console.error('Error parsing WebSocket message:', error);\n        }\n      };\n    }\n  \n    /**\n     * Планування спроби переконектитись\n     */\n    scheduleReconnect() {\n      if (this.reconnectTimeout) {\n        clearTimeout(this.reconnectTimeout);\n      }\n      \n      if (this.reconnectAttempts < this.maxReconnectAttempts) {\n        this.reconnectAttempts++;\n        const delay = this.reconnectDelay * Math.pow(1.5, this.reconnectAttempts - 1);\n        \n        console.log(`Reconnecting in ${delay / 1000} seconds (attempt ${this.reconnectAttempts}/${this.maxReconnectAttempts})`);\n        \n        this.reconnectTimeout = setTimeout(() => {\n          this.connect();\n        }, delay);\n      } else {\n        console.error('Max reconnect attempts reached, giving up');\n      }\n    }\n  \n    /**\n     * Відключення від WebSocket\n     */\n    disconnect() {\n      if (this.socket) {\n        this.socket.close();\n        this.socket = null;\n        this.isConnected = false;\n        \n        if (this.reconnectTimeout) {\n          clearTimeout(this.reconnectTimeout);\n          this.reconnectTimeout = null;\n        }\n      }\n    }\n  \n    /**\n     * Відправка повідомлення на сервер\n     */\n    send(message) {\n      if (!this.isConnected) {\n        console.warn('Cannot send message, WebSocket not connected');\n        return false;\n      }\n      \n      try {\n        this.socket.send(JSON.stringify(message));\n        return true;\n      } catch (error) {\n        console.error('Error sending WebSocket message:', error);\n        return false;\n      }\n    }\n  \n    /**\n     * Обробка вхідних повідомлень\n     */\n    handleMessage(message) {\n      const type = message.type;\n      \n      switch (type) {\n        case 'orderbook_update':\n          this.triggerCallbacks('onOrderbookUpdate', {\n            exchange: message.exchange,\n            token: message.token,\n            sell: message.sell,\n            buy: message.buy,\n            best_sell: message.best_sell,\n            best_buy: message.best_buy\n          });\n          break;\n          \n        case 'token_added':\n          this.triggerCallbacks('onTokenAdded', message.token);\n          break;\n          \n        case 'token_removed':\n          this.triggerCallbacks('onTokenRemoved', message.token);\n          break;\n          \n        case 'exchange_added':\n          this.triggerCallbacks('onExchangeAdded', message.exchange);\n          break;\n          \n        case 'exchange_removed':\n          this.triggerCallbacks('onExchangeRemoved', message.exchange);\n          break;\n          \n        case 'orderbooks_cleared':\n          this.triggerCallbacks('onOrderbooksCleared');\n          break;\n          \n        case 'full_table_update':\n          this.triggerCallbacks('onFullTableUpdate', message.data);\n          break;\n          \n        case 'initial_data':\n          this.triggerCallbacks('onInitialData', {\n            tokens: message.tokens,\n            exchanges: message.exchanges,\n            orderbooks: message.orderbooks\n          });\n          break;\n          \n        case 'error':\n          console.error('Server error:', message.message);\n          this.triggerCallbacks('onError', message.message);\n          break;\n          \n        default:\n          console.warn('Unknown message type:', type);\n          break;\n      }\n    }\n  \n    /**\n     * Виклик зареєстрованих колбеків\n     */\n    triggerCallbacks(event, data) {\n      if (this.callbacks[event]) {\n        this.callbacks[event].forEach(callback => {\n          try {\n            callback(data);\n          } catch (error) {\n            console.error(`Error in ${event} callback:`, error);\n          }\n        });\n      }\n    }\n  \n    /**\n     * Реєстрація колбеку\n     */\n    on(event, callback) {\n      if (this.callbacks[event]) {\n        this.callbacks[event].push(callback);\n      } else {\n        console.warn(`Unknown event: ${event}`);\n      }\n      \n      return this; // Для ланцюгового виклику\n    }\n  \n    /**\n     * Видалення колбеку\n     */\n    off(event, callback) {\n      if (this.callbacks[event]) {\n        this.callbacks[event] = this.callbacks[event].filter(cb => cb !== callback);\n      }\n      \n      return this;\n    }\n  \n    /**\n     * Підписка на оновлення ордербуків\n     */\n    subscribe(tokens = [], exchanges = []) {\n      return this.send({\n        action: 'subscribe',\n        tokens,\n        exchanges\n      });\n    }\n  \n    /**\n     * Додавання нового токену\n     */\n    addToken(token) {\n      return this.send({\n        action: 'add_token',\n        token\n      });\n    }\n  \n    /**\n     * Видалення токену\n     */\n    removeToken(token) {\n      return this.send({\n        action: 'remove_token',\n        token\n      });\n    }\n  \n    /**\n     * Додавання нової біржі\n     */\n    addExchange(exchange, url, type = 'websocket') {\n      return this.send({\n        action: 'add_exchange',\n        exchange,\n        url,\n        type\n      });\n    }\n  \n    /**\n     * Видалення біржі\n     */\n    removeExchange(exchange) {\n      return this.send({\n        action: 'remove_exchange',\n        exchange\n      });\n    }\n  \n    /**\n     * Оновлення цін\n     */\n    updatePrices(exchange = null) {\n      return this.send({\n        action: 'update_prices',\n        exchange\n      });\n    }\n  \n    /**\n     * Очищення всіх ордербуків\n     */\n    clear() {\n      return this.send({\n        action: 'clear'\n      });\n    }\n  }\n  \n  export default WebSocketService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}