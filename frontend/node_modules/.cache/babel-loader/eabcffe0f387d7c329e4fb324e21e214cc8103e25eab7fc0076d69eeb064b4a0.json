{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{calculatePercent,calculateDelta}from'../utils/calculations';/**\n * Таблиця з ордербуками для всіх токенів і бірж\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const OrderBookTable=_ref=>{let{orderbooks,exchanges,tokens,thresholds,onCellClick}=_ref;// Стан для підсвічених клітин\nconst[highlightedCells,setHighlightedCells]=useState({});// Функція для визначення чи потрібно підсвітити клітину\nconst shouldHighlight=useCallback((token,exchange,type,value)=>{if(value==='X X X'||!exchanges||exchanges.length<2)return null;const currentValue=parseFloat(value);if(isNaN(currentValue))return null;// Порівнюємо з іншими біржами\nlet highlightType=null;for(const otherExchange of exchanges){var _orderbooks$token,_orderbooks$token$oth;if(otherExchange===exchange)continue;const otherValue=(_orderbooks$token=orderbooks[token])===null||_orderbooks$token===void 0?void 0:(_orderbooks$token$oth=_orderbooks$token[otherExchange])===null||_orderbooks$token$oth===void 0?void 0:_orderbooks$token$oth[type==='sell'?'best_sell':'best_buy'];if(otherValue==='X X X')continue;const otherValueFloat=parseFloat(otherValue);if(isNaN(otherValueFloat))continue;// Розрахунок відсотка і дельти\nconst percent=calculatePercent(currentValue,otherValueFloat);const delta=calculateDelta(currentValue,otherValueFloat);if(type==='sell'){// Для sell ордерів підсвічуємо, якщо поточна ціна нижча\nif(percent<=-thresholds.percentThreshold||delta<=-thresholds.deltaThreshold){highlightType='green';break;}}else{// Для buy ордерів підсвічуємо, якщо поточна ціна вища\nif(percent>=thresholds.percentThreshold||delta>=thresholds.deltaThreshold){highlightType='green';break;}}}return highlightType;},[orderbooks,exchanges,thresholds]);// Оновлення підсвічених клітин при зміні даних\nuseEffect(()=>{const newHighlightedCells={};tokens.forEach(token=>{newHighlightedCells[token]={};exchanges.forEach(exchange=>{if(!orderbooks[token]||!orderbooks[token][exchange])return;const sellValue=orderbooks[token][exchange].best_sell;const buyValue=orderbooks[token][exchange].best_buy;const sellHighlight=shouldHighlight(token,exchange,'sell',sellValue);const buyHighlight=shouldHighlight(token,exchange,'buy',buyValue);newHighlightedCells[token][exchange]={sell:sellHighlight,buy:buyHighlight};});});setHighlightedCells(newHighlightedCells);},[orderbooks,tokens,exchanges,shouldHighlight]);// Функція для визначення класу CSS для клітини\nconst getCellClass=(token,exchange,type)=>{var _highlightedCells$tok,_highlightedCells$tok2;const highlight=(_highlightedCells$tok=highlightedCells[token])===null||_highlightedCells$tok===void 0?void 0:(_highlightedCells$tok2=_highlightedCells$tok[exchange])===null||_highlightedCells$tok2===void 0?void 0:_highlightedCells$tok2[type];let className=`price-cell ${type}-price`;if(highlight){className+=` highlight-${highlight}`;}return className;};// Обробник кліку на клітину\nconst handleCellClick=(token,exchange,type)=>{if(onCellClick){onCellClick(token,exchange,type);}};return/*#__PURE__*/_jsx(\"div\",{className:\"orderbook-table-container\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"orderbook-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Token\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Type\"}),exchanges.map(exchange=>/*#__PURE__*/_jsx(\"th\",{children:exchange},exchange))]})}),/*#__PURE__*/_jsx(\"tbody\",{children:tokens.map(token=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{rowSpan:\"2\",className:\"token-cell\",children:token}),/*#__PURE__*/_jsx(\"td\",{className:\"type-cell\",children:\"Sell\"}),exchanges.map(exchange=>{var _orderbooks$token2,_orderbooks$token2$ex;return/*#__PURE__*/_jsx(\"td\",{className:getCellClass(token,exchange,'sell'),onClick:()=>handleCellClick(token,exchange,'sell'),children:((_orderbooks$token2=orderbooks[token])===null||_orderbooks$token2===void 0?void 0:(_orderbooks$token2$ex=_orderbooks$token2[exchange])===null||_orderbooks$token2$ex===void 0?void 0:_orderbooks$token2$ex.best_sell)||'X X X'},`${token}-${exchange}-sell`);})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"type-cell\",children:\"Buy\"}),exchanges.map(exchange=>{var _orderbooks$token3,_orderbooks$token3$ex;return/*#__PURE__*/_jsx(\"td\",{className:getCellClass(token,exchange,'buy'),onClick:()=>handleCellClick(token,exchange,'buy'),children:((_orderbooks$token3=orderbooks[token])===null||_orderbooks$token3===void 0?void 0:(_orderbooks$token3$ex=_orderbooks$token3[exchange])===null||_orderbooks$token3$ex===void 0?void 0:_orderbooks$token3$ex.best_buy)||'X X X'},`${token}-${exchange}-buy`);})]})]},token))})]})});};export default OrderBookTable;","map":{"version":3,"names":["React","useState","useEffect","useCallback","calculatePercent","calculateDelta","jsx","_jsx","jsxs","_jsxs","OrderBookTable","_ref","orderbooks","exchanges","tokens","thresholds","onCellClick","highlightedCells","setHighlightedCells","shouldHighlight","token","exchange","type","value","length","currentValue","parseFloat","isNaN","highlightType","otherExchange","_orderbooks$token","_orderbooks$token$oth","otherValue","otherValueFloat","percent","delta","percentThreshold","deltaThreshold","newHighlightedCells","forEach","sellValue","best_sell","buyValue","best_buy","sellHighlight","buyHighlight","sell","buy","getCellClass","_highlightedCells$tok","_highlightedCells$tok2","highlight","className","handleCellClick","children","map","Fragment","rowSpan","_orderbooks$token2","_orderbooks$token2$ex","onClick","_orderbooks$token3","_orderbooks$token3$ex"],"sources":["D:/100/crypto-orderbook/frontend/src/components/OrderBookTable.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { calculatePercent, calculateDelta } from '../utils/calculations';\n\n/**\n * Таблиця з ордербуками для всіх токенів і бірж\n */\nconst OrderBookTable = ({ \n  orderbooks, \n  exchanges, \n  tokens,\n  thresholds,\n  onCellClick\n}) => {\n  // Стан для підсвічених клітин\n  const [highlightedCells, setHighlightedCells] = useState({});\n\n  // Функція для визначення чи потрібно підсвітити клітину\n  const shouldHighlight = useCallback((token, exchange, type, value) => {\n    if (value === 'X X X' || !exchanges || exchanges.length < 2) return null;\n\n    const currentValue = parseFloat(value);\n    if (isNaN(currentValue)) return null;\n\n    // Порівнюємо з іншими біржами\n    let highlightType = null;\n    \n    for (const otherExchange of exchanges) {\n      if (otherExchange === exchange) continue;\n      \n      const otherValue = orderbooks[token]?.[otherExchange]?.[type === 'sell' ? 'best_sell' : 'best_buy'];\n      if (otherValue === 'X X X') continue;\n      \n      const otherValueFloat = parseFloat(otherValue);\n      if (isNaN(otherValueFloat)) continue;\n      \n      // Розрахунок відсотка і дельти\n      const percent = calculatePercent(currentValue, otherValueFloat);\n      const delta = calculateDelta(currentValue, otherValueFloat);\n      \n      if (type === 'sell') {\n        // Для sell ордерів підсвічуємо, якщо поточна ціна нижча\n        if (\n          (percent <= -thresholds.percentThreshold) || \n          (delta <= -thresholds.deltaThreshold)\n        ) {\n          highlightType = 'green';\n          break;\n        }\n      } else {\n        // Для buy ордерів підсвічуємо, якщо поточна ціна вища\n        if (\n          (percent >= thresholds.percentThreshold) || \n          (delta >= thresholds.deltaThreshold)\n        ) {\n          highlightType = 'green';\n          break;\n        }\n      }\n    }\n\n    return highlightType;\n  }, [orderbooks, exchanges, thresholds]);\n\n  // Оновлення підсвічених клітин при зміні даних\n  useEffect(() => {\n    const newHighlightedCells = {};\n    \n    tokens.forEach(token => {\n      newHighlightedCells[token] = {};\n      \n      exchanges.forEach(exchange => {\n        if (!orderbooks[token] || !orderbooks[token][exchange]) return;\n        \n        const sellValue = orderbooks[token][exchange].best_sell;\n        const buyValue = orderbooks[token][exchange].best_buy;\n        \n        const sellHighlight = shouldHighlight(token, exchange, 'sell', sellValue);\n        const buyHighlight = shouldHighlight(token, exchange, 'buy', buyValue);\n        \n        newHighlightedCells[token][exchange] = {\n          sell: sellHighlight,\n          buy: buyHighlight\n        };\n      });\n    });\n    \n    setHighlightedCells(newHighlightedCells);\n  }, [orderbooks, tokens, exchanges, shouldHighlight]);\n\n  // Функція для визначення класу CSS для клітини\n  const getCellClass = (token, exchange, type) => {\n    const highlight = highlightedCells[token]?.[exchange]?.[type];\n    let className = `price-cell ${type}-price`;\n    \n    if (highlight) {\n      className += ` highlight-${highlight}`;\n    }\n    \n    return className;\n  };\n\n  // Обробник кліку на клітину\n  const handleCellClick = (token, exchange, type) => {\n    if (onCellClick) {\n      onCellClick(token, exchange, type);\n    }\n  };\n\n  return (\n    <div className=\"orderbook-table-container\">\n      <table className=\"orderbook-table\">\n        <thead>\n          <tr>\n            <th>Token</th>\n            <th>Type</th>\n            {exchanges.map(exchange => (\n              <th key={exchange}>{exchange}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {tokens.map(token => (\n            <React.Fragment key={token}>\n              {/* Рядок для цін Sell */}\n              <tr>\n                <td rowSpan=\"2\" className=\"token-cell\">{token}</td>\n                <td className=\"type-cell\">Sell</td>\n                {exchanges.map(exchange => (\n                  <td \n                    key={`${token}-${exchange}-sell`}\n                    className={getCellClass(token, exchange, 'sell')}\n                    onClick={() => handleCellClick(token, exchange, 'sell')}\n                  >\n                    {orderbooks[token]?.[exchange]?.best_sell || 'X X X'}\n                  </td>\n                ))}\n              </tr>\n              {/* Рядок для цін Buy */}\n              <tr>\n                <td className=\"type-cell\">Buy</td>\n                {exchanges.map(exchange => (\n                  <td \n                    key={`${token}-${exchange}-buy`}\n                    className={getCellClass(token, exchange, 'buy')}\n                    onClick={() => handleCellClick(token, exchange, 'buy')}\n                  >\n                    {orderbooks[token]?.[exchange]?.best_buy || 'X X X'}\n                  </td>\n                ))}\n              </tr>\n            </React.Fragment>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default OrderBookTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}